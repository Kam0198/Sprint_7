{"name": "test_create_new_courier", "status": "broken", "statusDetails": {"message": "ValueError: Invalid format specifier 'true' for object of type 'str'", "trace": "self = <allure_pytest.listener.AllureListener object at 0x106b80c90>, item = <Function test_create_new_courier>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n        yield\n        self._update_fixtures_children(item)\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n        params = self.__get_pytest_params(item)\n>       test_result.name = allure_name(item, params)\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/allure_pytest/listener.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/allure_pytest/utils.py:116: in allure_name\n    return SafeFormatter().format(\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/string.py:190: in format\n    return self.vformat(format_string, args, kwargs)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/string.py:194: in vformat\n    result, _ = self._vformat(format_string, args, kwargs, used_args, 2)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/string.py:247: in _vformat\n    result.append(self.format_field(obj, format_spec))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.utils.SafeFormatter object at 0x1070c4410>, value = '{\"ok\"}', format_spec = 'true'\n\n    def format_field(self, value, format_spec):\n>       return format(value, format_spec)\nE       ValueError: Invalid format specifier 'true' for object of type 'str'\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/string.py:264: ValueError"}, "start": 1706729799061, "stop": 1706729799061, "uuid": "557ac2bd-e607-488d-8a7f-f210e5999ebf", "historyId": "6adf97f83acf6453d4a6a4b1070f3754", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_сourier_create"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "MacBook-Air-Kamilla.local"}, {"name": "thread", "value": "14573-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_сourier_create"}]}